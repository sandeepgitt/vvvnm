<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10400.17.1103.1137                               -->
<workbook original-version='10.4' source-build='10.4.1 (10400.17.1103.1137)' source-platform='win' version='10.4' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource inline='true' name='World Indicators' version='10.4'>
      <connection class='federated'>
        <named-connections>
          <named-connection name='World Indicatorsleaf'>
            <connection class='dataengine' dbname='C:/Users/dasarr/Documents/My Tableau Repository/Datasources/10.4/en_US-US/World Indicators.tde' schema='Extract' tablename='Extract'>
              <calculations>
                <calculation column='[Number of Records]' formula='1' />
              </calculations>
            </connection>
          </named-connection>
        </named-connections>
        <relation connection='World Indicatorsleaf' name='Extract' table='[Extract].[Extract]' type='table' />
        <refresh>
          <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='2704' timestamp-start='2014-12-10 07:00:47.229' />
        </refresh>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Birth Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Birth Rate]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Birth Rate</remote-alias>
            <ordinal>0</ordinal>
            <family>English$</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>48</approx-count>
            <contains-null>true</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0070000000000000001</statistic>
              <statistic aggregation='Max' datatype='real'>0.052999999999999999</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business Tax Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Business Tax Rate]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Business Tax Rate</remote-alias>
            <ordinal>1</ordinal>
            <family>English$</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>448</approx-count>
            <contains-null>true</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.082000000000000003</statistic>
              <statistic aggregation='Max' datatype='real'>3.391</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO2 Emissions</remote-name>
            <remote-type>3</remote-type>
            <local-name>[CO2 Emissions]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>CO2 Emissions</remote-alias>
            <ordinal>2</ordinal>
            <family>English$</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1744</approx-count>
            <contains-null>true</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='integer'>7</statistic>
              <statistic aggregation='Max' datatype='integer'>8286892</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>3</ordinal>
            <family>English$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>208</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Afghanistan&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Zimbabwe&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Days to Start Business</remote-name>
            <remote-type>2</remote-type>
            <local-name>[Days to Start Business]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Days to Start Business</remote-alias>
            <ordinal>4</ordinal>
            <family>English$</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>127</approx-count>
            <contains-null>true</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='integer'>1</statistic>
              <statistic aggregation='Max' datatype='integer'>694</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ease of Business</remote-name>
            <remote-type>2</remote-type>
            <local-name>[Ease of Business]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Ease of Business</remote-alias>
            <ordinal>5</ordinal>
            <family>English$</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>186</approx-count>
            <contains-null>true</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='integer'>1</statistic>
              <statistic aggregation='Max' datatype='integer'>189</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy Usage</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Energy Usage]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Energy Usage</remote-alias>
            <ordinal>6</ordinal>
            <family>English$</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1722</approx-count>
            <contains-null>true</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='integer'>8</statistic>
              <statistic aggregation='Max' datatype='integer'>2727728</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GDP]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>GDP</remote-alias>
            <ordinal>7</ordinal>
            <family>English$</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>2495</approx-count>
            <contains-null>true</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='integer'>63101272</statistic>
              <statistic aggregation='Max' datatype='integer'>16244600000000</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health Exp % GDP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Health Exp % GDP]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Health Exp % GDP</remote-alias>
            <ordinal>8</ordinal>
            <family>English$</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>146</approx-count>
            <contains-null>true</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0080000000000000002</statistic>
              <statistic aggregation='Max' datatype='real'>0.22500000000000001</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health Exp/Capita</remote-name>
            <remote-type>2</remote-type>
            <local-name>[Health Exp/Capita]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Health Exp/Capita</remote-alias>
            <ordinal>9</ordinal>
            <family>English$</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1070</approx-count>
            <contains-null>true</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='integer'>2</statistic>
              <statistic aggregation='Max' datatype='integer'>9908</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hours to do Tax</remote-name>
            <remote-type>2</remote-type>
            <local-name>[Hours to do Tax]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Hours to do Tax</remote-alias>
            <ordinal>10</ordinal>
            <family>English$</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>281</approx-count>
            <contains-null>true</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='integer'>12</statistic>
              <statistic aggregation='Max' datatype='integer'>2600</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Infant Mortality Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Infant Mortality Rate]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Infant Mortality Rate</remote-alias>
            <ordinal>11</ordinal>
            <family>English$</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>130</approx-count>
            <contains-null>true</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.002</statistic>
              <statistic aggregation='Max' datatype='real'>0.14099999999999999</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Internet Usage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Internet Usage]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Internet Usage</remote-alias>
            <ordinal>12</ordinal>
            <family>English$</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>709</approx-count>
            <contains-null>true</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>0.96199999999999997</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lending Interest</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Lending Interest]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Lending Interest</remote-alias>
            <ordinal>13</ordinal>
            <family>English$</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>352</approx-count>
            <contains-null>true</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0050000000000000001</statistic>
              <statistic aggregation='Max' datatype='real'>4.9649999999999999</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Life Expectancy Female</remote-name>
            <remote-type>16</remote-type>
            <local-name>[Life Expectancy Female]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Life Expectancy Female</remote-alias>
            <ordinal>14</ordinal>
            <family>English$</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>50</approx-count>
            <contains-null>true</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='integer'>39</statistic>
              <statistic aggregation='Max' datatype='integer'>87</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Life Expectancy Male</remote-name>
            <remote-type>16</remote-type>
            <local-name>[Life Expectancy Male]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Life Expectancy Male</remote-alias>
            <ordinal>15</ordinal>
            <family>English$</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>48</approx-count>
            <contains-null>true</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='integer'>37</statistic>
              <statistic aggregation='Max' datatype='integer'>88</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mobile Phone Usage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Mobile Phone Usage]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Mobile Phone Usage</remote-alias>
            <ordinal>16</ordinal>
            <family>English$</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1179</approx-count>
            <contains-null>true</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>2.8980000000000001</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Records</remote-name>
            <remote-type>16</remote-type>
            <local-name>[Number of Records]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Number of Records</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='integer'>1</statistic>
              <statistic aggregation='Max' datatype='integer'>1</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population 0-14</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population 0-14]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Population 0-14</remote-alias>
            <ordinal>18</ordinal>
            <family>English$</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>377</approx-count>
            <contains-null>true</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.11799999999999999</statistic>
              <statistic aggregation='Max' datatype='real'>0.5</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population 15-64</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population 15-64]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Population 15-64</remote-alias>
            <ordinal>19</ordinal>
            <family>English$</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>299</approx-count>
            <contains-null>true</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.47399999999999998</statistic>
              <statistic aggregation='Max' datatype='real'>0.85799999999999998</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population 65+</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population 65+]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Population 65+</remote-alias>
            <ordinal>20</ordinal>
            <family>English$</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>209</approx-count>
            <contains-null>true</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0030000000000000001</statistic>
              <statistic aggregation='Max' datatype='real'>0.24399999999999999</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population Total</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Population Total]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Population Total</remote-alias>
            <ordinal>21</ordinal>
            <family>English$</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>2699</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='integer'>18876</statistic>
              <statistic aggregation='Max' datatype='integer'>1350695000</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population Urban</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population Urban]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Population Urban</remote-alias>
            <ordinal>22</ordinal>
            <family>English$</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>823</approx-count>
            <contains-null>true</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.082000000000000003</statistic>
              <statistic aggregation='Max' datatype='real'>1.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>23</ordinal>
            <family>English$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>6</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Africa&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;The Americas&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tourism Inbound</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Tourism Inbound]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Tourism Inbound</remote-alias>
            <ordinal>24</ordinal>
            <family>English$</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1651</approx-count>
            <contains-null>true</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='integer'>700000</statistic>
              <statistic aggregation='Max' datatype='integer'>200092000000</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tourism Outbound</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Tourism Outbound]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Tourism Outbound</remote-alias>
            <ordinal>25</ordinal>
            <family>English$</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1458</approx-count>
            <contains-null>true</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='integer'>200000</statistic>
              <statistic aggregation='Max' datatype='integer'>126573000000</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>26</ordinal>
            <family>English$</family>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <approx-count>13</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='date'>#2000-12-01#</statistic>
              <statistic aggregation='Max' datatype='date'>#2012-12-01#</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column aggregation='Avg' datatype='real' default-format='p0.0%' name='[Birth Rate]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>% of population</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Avg' datatype='real' default-format='p0.0%' name='[Business Tax Rate]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>% of Commercial profit</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Avg' datatype='integer' name='[CO2 Emissions]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>Kilotonnes of oil equivalent</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Avg' datatype='integer' name='[Days to Start Business]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>Time required to start a business</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Avg' datatype='integer' name='[Ease of Business]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>1=Ease</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Avg' datatype='integer' name='[Energy Usage]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>Kilotonnes</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Avg' datatype='integer' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[GDP]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run fontsize='8'>Gross domestic product </run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Avg' datatype='real' default-format='p0.0%' name='[Health Exp % GDP]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>Healthcare expenditure as % of GDP</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Avg' datatype='integer' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Health Exp/Capita]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>Healthcare expenditure per capita</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Avg' datatype='integer' name='[Hours to do Tax]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>Time to prepare and pay taxes for business</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Avg' datatype='real' default-format='p0.0%' name='[Infant Mortality Rate]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>% of Population</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Avg' datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Internet Usage]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>Per Capita</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Avg' datatype='real' default-format='p0.0%' name='[Lending Interest]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>A bank rate that meets private sectors&apos; needs.</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Avg' datatype='integer' name='[Life Expectancy Female]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>Years a newborn would live if prevailing patterns are the same</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Avg' datatype='integer' name='[Life Expectancy Male]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>Years a newborn would live if prevailing patterns are the same</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Avg' datatype='real' default-format='n#,##0.0;-#,##0.0' name='[Mobile Phone Usage]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>Per Capita</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Avg' datatype='real' default-format='p0.0%' name='[Population 0-14]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>% of population</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Avg' datatype='real' default-format='p0.0%' name='[Population 15-64]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>% of population</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Avg' datatype='real' default-format='p0.0%' name='[Population 65+]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>% of population</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Avg' datatype='integer' name='[Population Total]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>Total number of people in a country</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Avg' datatype='real' default-format='p0.0%' name='[Population Urban]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>% of population</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Avg' datatype='integer' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Tourism Inbound]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>Income from inbound tourism</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Avg' datatype='integer' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Tourism Outbound]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>Expenditure for outbound tourism</run>
          </formatted-text>
        </desc>
      </column>
      <folder name='Business' role='measures'>
        <folder-item name='[Business Tax Rate]' type='field' />
        <folder-item name='[Days to Start Business]' type='field' />
        <folder-item name='[Ease of Business]' type='field' />
        <folder-item name='[Hours to do Tax]' type='field' />
        <folder-item name='[Lending Interest]' type='field' />
      </folder>
      <folder name='Development' role='measures'>
        <folder-item name='[CO2 Emissions]' type='field' />
        <folder-item name='[Energy Usage]' type='field' />
        <folder-item name='[GDP]' type='field' />
        <folder-item name='[Internet Usage]' type='field' />
        <folder-item name='[Mobile Phone Usage]' type='field' />
        <folder-item name='[Tourism Inbound]' type='field' />
        <folder-item name='[Tourism Outbound]' type='field' />
      </folder>
      <folder name='Health' role='measures'>
        <folder-item name='[Health Exp % GDP]' type='field' />
        <folder-item name='[Health Exp/Capita]' type='field' />
        <folder-item name='[Infant Mortality Rate]' type='field' />
        <folder-item name='[Life Expectancy Female]' type='field' />
        <folder-item name='[Life Expectancy Male]' type='field' />
      </folder>
      <folder name='Population' role='measures'>
        <folder-item name='[Birth Rate]' type='field' />
        <folder-item name='[Population 0-14]' type='field' />
        <folder-item name='[Population 15-64]' type='field' />
        <folder-item name='[Population 65+]' type='field' />
        <folder-item name='[Population Total]' type='field' />
        <folder-item name='[Population Urban]' type='field' />
      </folder>
      <layout dim-ordering='alphabetic' dim-percentage='0.142395' measure-ordering='alphabetic' measure-percentage='0.857605' rowDisplayCount='1000' show-structure='false' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Orders+ (Multiple Connections)' inline='true' name='federated.1au5uqt010x7721fn5jsc1wf8pnt' version='10.4'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Global Superstore Orders 2016' name='excel-direct.1d5nq2l0fqsjhf120e8ez0pe142c'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/dasarr/Downloads/June Data Science-20161124T075638Z/June Data Science/Super specialization/Class 27/Module 23 data sets/Data Join/Global Superstore Orders 2016.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='Global Superstore Returns 2016' name='textscan.1lj008j12ugx1419yxob70j5e5l7'>
            <connection class='textscan' cleaning='yes' compat='no' csvFile='C:\Users\dasarr\Downloads\June Data Science-20161124T075638Z\June Data Science\Super specialization\Class 27\Module 23 data sets\Data Join\Global Superstore Returns 2016.csv' dataRefreshTime='' directory='C:/Users/dasarr/Downloads/June Data Science-20161124T075638Z/June Data Science/Super specialization/Class 27/Module 23 data sets/Data Join' filename='C:/Users/dasarr/AppData/Local/Temp/TableauTemp/0ad79aw0vmdhyw18fpr600xpepca/Global Superstore Returns 2016.csv.xlsx' interpretationMode='8' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Orders].[Order ID]' />
              <expression op='[Global Superstore Returns 2016.csv].[Order ID]' />
            </expression>
          </clause>
          <relation connection='excel-direct.1d5nq2l0fqsjhf120e8ez0pe142c' name='Orders' table='[Orders$]' type='table'>
            <columns gridOrigin='A1:X10001:no:A1:X10001:0' header='yes' outcome='6'>
              <column datatype='integer' name='Row ID' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='date' name='Order Date' ordinal='2' />
              <column datatype='date' name='Ship Date' ordinal='3' />
              <column datatype='string' name='Ship Mode' ordinal='4' />
              <column datatype='string' name='Customer ID' ordinal='5' />
              <column datatype='string' name='Customer Name' ordinal='6' />
              <column datatype='string' name='Segment' ordinal='7' />
              <column datatype='integer' name='Postal Code' ordinal='8' />
              <column datatype='string' name='City' ordinal='9' />
              <column datatype='string' name='State' ordinal='10' />
              <column datatype='string' name='Country' ordinal='11' />
              <column datatype='string' name='Region' ordinal='12' />
              <column datatype='string' name='Market' ordinal='13' />
              <column datatype='string' name='Product ID' ordinal='14' />
              <column datatype='string' name='Category' ordinal='15' />
              <column datatype='string' name='Sub-Category' ordinal='16' />
              <column datatype='string' name='Product Name' ordinal='17' />
              <column datatype='real' name='Sales' ordinal='18' />
              <column datatype='integer' name='Quantity' ordinal='19' />
              <column datatype='real' name='Discount' ordinal='20' />
              <column datatype='real' name='Profit' ordinal='21' />
              <column datatype='real' name='Shipping Cost' ordinal='22' />
              <column datatype='string' name='Order Priority' ordinal='23' />
            </columns>
          </relation>
          <relation connection='textscan.1lj008j12ugx1419yxob70j5e5l7' name='Global Superstore Returns 2016.csv' table='[Global Superstore Returns 2016#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Returned' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='string' name='Region' ordinal='2' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Category]' value='[Orders].[Category]' />
          <map key='[City]' value='[Orders].[City]' />
          <map key='[Country]' value='[Orders].[Country]' />
          <map key='[Customer ID]' value='[Orders].[Customer ID]' />
          <map key='[Customer Name]' value='[Orders].[Customer Name]' />
          <map key='[Discount]' value='[Orders].[Discount]' />
          <map key='[Market]' value='[Orders].[Market]' />
          <map key='[Order Date]' value='[Orders].[Order Date]' />
          <map key='[Order ID (Global Superstore Returns 2016.csv)]' value='[Global Superstore Returns 2016.csv].[Order ID]' />
          <map key='[Order ID]' value='[Orders].[Order ID]' />
          <map key='[Order Priority]' value='[Orders].[Order Priority]' />
          <map key='[Postal Code]' value='[Orders].[Postal Code]' />
          <map key='[Product ID]' value='[Orders].[Product ID]' />
          <map key='[Product Name]' value='[Orders].[Product Name]' />
          <map key='[Profit]' value='[Orders].[Profit]' />
          <map key='[Quantity]' value='[Orders].[Quantity]' />
          <map key='[Region (Global Superstore Returns 2016.csv)]' value='[Global Superstore Returns 2016.csv].[Region]' />
          <map key='[Region]' value='[Orders].[Region]' />
          <map key='[Returned]' value='[Global Superstore Returns 2016.csv].[Returned]' />
          <map key='[Row ID]' value='[Orders].[Row ID]' />
          <map key='[Sales]' value='[Orders].[Sales]' />
          <map key='[Segment]' value='[Orders].[Segment]' />
          <map key='[Ship Date]' value='[Orders].[Ship Date]' />
          <map key='[Ship Mode]' value='[Orders].[Ship Mode]' />
          <map key='[Shipping Cost]' value='[Orders].[Shipping Cost]' />
          <map key='[State]' value='[Orders].[State]' />
          <map key='[Sub-Category]' value='[Orders].[Sub-Category]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Market]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Market</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shipping Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Shipping Cost]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Shipping Cost</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Priority</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order Priority]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Priority</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:X10001:no:A1:X10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Returned</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Returned]</local-name>
            <parent-name>[Global Superstore Returns 2016.csv]</parent-name>
            <remote-alias>Returned</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Order ID (Global Superstore Returns 2016.csv)]</local-name>
            <parent-name>[Global Superstore Returns 2016.csv]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region (Global Superstore Returns 2016.csv)]</local-name>
            <parent-name>[Global Superstore Returns 2016.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Global Superstore Returns 2016.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <calculation class='categorical-bin' column='[Country]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Angola, Argentina, Australia and 34 more&quot;'>
            <value>&quot;Angola&quot;</value>
            <value>&quot;Argentina&quot;</value>
            <value>&quot;Australia&quot;</value>
            <value>&quot;Bolivia&quot;</value>
            <value>&quot;Botswana&quot;</value>
            <value>&quot;Brazil&quot;</value>
            <value>&quot;Burundi&quot;</value>
            <value>&quot;Cameroon&quot;</value>
            <value>&quot;Chile&quot;</value>
            <value>&quot;Democratic Republic of the Congo&quot;</value>
            <value>&quot;Ecuador&quot;</value>
            <value>&quot;Equatorial Guinea&quot;</value>
            <value>&quot;Gabon&quot;</value>
            <value>&quot;Indonesia&quot;</value>
            <value>&quot;Kenya&quot;</value>
            <value>&quot;Lesotho&quot;</value>
            <value>&quot;Liberia&quot;</value>
            <value>&quot;Madagascar&quot;</value>
            <value>&quot;Malawi&quot;</value>
            <value>&quot;Malaysia&quot;</value>
            <value>&quot;Mozambique&quot;</value>
            <value>&quot;Namibia&quot;</value>
            <value>&quot;Papua New Guinea&quot;</value>
            <value>&quot;Paraguay&quot;</value>
            <value>&quot;Peru&quot;</value>
            <value>&quot;Republic of the Congo&quot;</value>
            <value>&quot;Rwanda&quot;</value>
            <value>&quot;Singapore&quot;</value>
            <value>&quot;Somalia&quot;</value>
            <value>&quot;South Africa&quot;</value>
            <value>&quot;Sri Lanka&quot;</value>
            <value>&quot;Swaziland&quot;</value>
            <value>&quot;Tanzania&quot;</value>
            <value>&quot;Uganda&quot;</value>
            <value>&quot;Uruguay&quot;</value>
            <value>&quot;Zambia&quot;</value>
            <value>&quot;Zimbabwe&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Distribution Centre' datatype='string' name='[Order ID - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1au5uqt010x7721fn5jsc1wf8pnt].[Order ID]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [Order ID], &quot;-&quot;, 1 ) )' />
      </column>
      <column datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Sub-Category (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Sub-Category]' new-bin='true'>
          <bin default-name='false' value='&quot;Small Appliances&quot;'>
            <value>&quot;Art&quot;</value>
            <value>&quot;Envelopes&quot;</value>
            <value>&quot;Fasteners&quot;</value>
            <value>&quot;Labels&quot;</value>
            <value>&quot;Paper&quot;</value>
            <value>&quot;Supplies&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
      <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      <group caption='Action (Country,State)' hidden='true' name='[Action (Country,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='products'>
          <field>[Category]</field>
          <field>[Product Name]</field>
          <field>[Sub-Category]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.679612' measure-ordering='alphabetic' measure-percentage='0.320388' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='shape' field='[none:Category:nk]' type='shape'>
            <map to='circle'>
              <bucket>&quot;Furniture&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Technology&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Office Supplies&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.1au5uqt010x7721fn5jsc1wf8pnt'>
      <datasources>
        <datasource caption='Orders+ (Multiple Connections)' name='federated.1au5uqt010x7721fn5jsc1wf8pnt' />
      </datasources>
      <datasource-dependencies datasource='federated.1au5uqt010x7721fn5jsc1wf8pnt'>
        <column datatype='string' name='[Category]' role='dimension' type='nominal' />
        <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.1au5uqt010x7721fn5jsc1wf8pnt].[none:Category:nk]'>
        <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Sales Dashboard' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Category' />
        <param name='target' value='Sales Dashboard' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Sales Dashboard' type='sheet' worksheet='Global sales &amp; profit' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Sales Dashboard' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Cross Tab'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Multiple Connections)' name='federated.1au5uqt010x7721fn5jsc1wf8pnt' />
          </datasources>
          <datasource-dependencies datasource='federated.1au5uqt010x7721fn5jsc1wf8pnt'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[pcdf:sum:Sales:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' level-address='[federated.1au5uqt010x7721fn5jsc1wf8pnt].[yr:Order Date:ok]' ordering-field='[federated.1au5uqt010x7721fn5jsc1wf8pnt].[Order Date]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1au5uqt010x7721fn5jsc1wf8pnt].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1au5uqt010x7721fn5jsc1wf8pnt].[pcdf:sum:Sales:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1au5uqt010x7721fn5jsc1wf8pnt].[sum:Sales:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1au5uqt010x7721fn5jsc1wf8pnt].[:Measure Names]</column>
            <column>[federated.1au5uqt010x7721fn5jsc1wf8pnt].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1au5uqt010x7721fn5jsc1wf8pnt].[sum:Profit:qk]' num-steps='6' palette='green_gold_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1au5uqt010x7721fn5jsc1wf8pnt].[sum:Profit:qk]' />
              <text column='[federated.1au5uqt010x7721fn5jsc1wf8pnt].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1au5uqt010x7721fn5jsc1wf8pnt].[mn:Order Date:ok] / [federated.1au5uqt010x7721fn5jsc1wf8pnt].[none:Category:nk])</rows>
        <cols>([federated.1au5uqt010x7721fn5jsc1wf8pnt].[yr:Order Date:ok] / [federated.1au5uqt010x7721fn5jsc1wf8pnt].[:Measure Names])</cols>
        <annotations>
          <annotation class='point' id='2' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Sales: </run>
              <run bold='true'>&lt;[federated.1au5uqt010x7721fn5jsc1wf8pnt].[sum:Sales:qk]&gt;FALL IN</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='23317.803907619058'>
                  <node-reference>
                    <fields>
                      <field>[federated.1au5uqt010x7721fn5jsc1wf8pnt].[none:Category:nk]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;Furniture&quot;</bucket>
                    </multibucket>
                    <axis>[federated.1au5uqt010x7721fn5jsc1wf8pnt].[sum:Sales:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord cell-offset='0.566667'>
                  <node-reference>
                    <fields>
                      <field>[federated.1au5uqt010x7721fn5jsc1wf8pnt].[mn:Order Date:ok]</field>
                    </fields>
                    <multibucket>
                      <bucket>7</bucket>
                    </multibucket>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
    <worksheet name='Customer Breakdown'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Multiple Connections)' name='federated.1au5uqt010x7721fn5jsc1wf8pnt' />
          </datasources>
          <datasource-dependencies datasource='federated.1au5uqt010x7721fn5jsc1wf8pnt'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Customer ID]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Shipping Cost]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer ID]' derivation='None' name='[none:Customer ID:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Shipping Cost]' derivation='Sum' name='[sum:Shipping Cost:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1au5uqt010x7721fn5jsc1wf8pnt].[Action (Country,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1au5uqt010x7721fn5jsc1wf8pnt].[none:Category:nk]</column>
            <column>[federated.1au5uqt010x7721fn5jsc1wf8pnt].[Action (Country,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <shape column='[federated.1au5uqt010x7721fn5jsc1wf8pnt].[none:Category:nk]' />
              <lod column='[federated.1au5uqt010x7721fn5jsc1wf8pnt].[none:Customer ID:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#d4d4d4' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1au5uqt010x7721fn5jsc1wf8pnt].[sum:Profit:qk]</rows>
        <cols>[federated.1au5uqt010x7721fn5jsc1wf8pnt].[sum:Shipping Cost:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Global sales &amp; profit'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Multiple Connections)' name='federated.1au5uqt010x7721fn5jsc1wf8pnt' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1au5uqt010x7721fn5jsc1wf8pnt'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1au5uqt010x7721fn5jsc1wf8pnt].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1au5uqt010x7721fn5jsc1wf8pnt].[Latitude (generated)]' field-type='quantitative' max='16112635.969354207' min='-7592269.6351736709' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1au5uqt010x7721fn5jsc1wf8pnt].[Longitude (generated)]' field-type='quantitative' max='16480550.363493927' min='-24048253.524247486' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1au5uqt010x7721fn5jsc1wf8pnt].[sum:Profit:qk]' />
              <size column='[federated.1au5uqt010x7721fn5jsc1wf8pnt].[sum:Sales:qk]' />
              <lod column='[federated.1au5uqt010x7721fn5jsc1wf8pnt].[none:Country:nk]' />
              <lod column='[federated.1au5uqt010x7721fn5jsc1wf8pnt].[none:State:nk]' />
              <lod column='[federated.1au5uqt010x7721fn5jsc1wf8pnt].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.8350828886032104' />
                <format attr='mark-transparency' value='201' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#f5f5f5' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1au5uqt010x7721fn5jsc1wf8pnt].[Latitude (generated)]</rows>
        <cols>[federated.1au5uqt010x7721fn5jsc1wf8pnt].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Sales by Sub category'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Multiple Connections)' name='federated.1au5uqt010x7721fn5jsc1wf8pnt' />
          </datasources>
          <datasource-dependencies datasource='federated.1au5uqt010x7721fn5jsc1wf8pnt'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Sub-Category]' new-bin='true'>
                <bin default-name='false' value='&quot;Small Appliances&quot;'>
                  <value>&quot;Art&quot;</value>
                  <value>&quot;Envelopes&quot;</value>
                  <value>&quot;Fasteners&quot;</value>
                  <value>&quot;Labels&quot;</value>
                  <value>&quot;Paper&quot;</value>
                  <value>&quot;Supplies&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1au5uqt010x7721fn5jsc1wf8pnt].[Action (Country,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.1au5uqt010x7721fn5jsc1wf8pnt].[Sub-Category (group)]' direction='DESC' using='[federated.1au5uqt010x7721fn5jsc1wf8pnt].[sum:Sales:qk]' />
          <sort class='computed' column='[federated.1au5uqt010x7721fn5jsc1wf8pnt].[none:Category:nk]' direction='DESC' using='[federated.1au5uqt010x7721fn5jsc1wf8pnt].[sum:Sales:qk]' />
          <slices>
            <column>[federated.1au5uqt010x7721fn5jsc1wf8pnt].[none:Category:nk]</column>
            <column>[federated.1au5uqt010x7721fn5jsc1wf8pnt].[Action (Country,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1au5uqt010x7721fn5jsc1wf8pnt].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1au5uqt010x7721fn5jsc1wf8pnt].[sum:Sales:qk]</rows>
        <cols>([federated.1au5uqt010x7721fn5jsc1wf8pnt].[none:Category:nk] / [federated.1au5uqt010x7721fn5jsc1wf8pnt].[Sub-Category (group)])</cols>
      </table>
    </worksheet>
    <worksheet name='Sales seasonality'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Multiple Connections)' name='federated.1au5uqt010x7721fn5jsc1wf8pnt' />
          </datasources>
          <datasource-dependencies datasource='federated.1au5uqt010x7721fn5jsc1wf8pnt'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[pcdf:sum:Sales:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' level-address='[federated.1au5uqt010x7721fn5jsc1wf8pnt].[yr:Order Date:ok]' ordering-field='[federated.1au5uqt010x7721fn5jsc1wf8pnt].[Order Date]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1au5uqt010x7721fn5jsc1wf8pnt].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1au5uqt010x7721fn5jsc1wf8pnt].[yr:Order Date:ok]' />
              <tooltip column='[federated.1au5uqt010x7721fn5jsc1wf8pnt].[pcdf:sum:Sales:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1au5uqt010x7721fn5jsc1wf8pnt].[none:Category:nk] * [federated.1au5uqt010x7721fn5jsc1wf8pnt].[sum:Sales:qk])</rows>
        <cols>[federated.1au5uqt010x7721fn5jsc1wf8pnt].[mn:Order Date:ok]</cols>
        <annotations>
          <annotation class='point' id='2' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Sales: </run>
              <run bold='true'>&lt;[federated.1au5uqt010x7721fn5jsc1wf8pnt].[sum:Sales:qk]&gt;FALL IN</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.566667'>
                  <node-reference>
                    <fields>
                      <field>[federated.1au5uqt010x7721fn5jsc1wf8pnt].[mn:Order Date:ok]</field>
                    </fields>
                    <multibucket>
                      <bucket>7</bucket>
                    </multibucket>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='23317.803907619058'>
                  <node-reference>
                    <fields>
                      <field>[federated.1au5uqt010x7721fn5jsc1wf8pnt].[none:Category:nk]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;Furniture&quot;</bucket>
                    </multibucket>
                    <axis>[federated.1au5uqt010x7721fn5jsc1wf8pnt].[sum:Sales:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Sales Dashboard'>
      <style />
      <size maxheight='600' maxwidth='800' minheight='600' minwidth='800' preset-index='3' sizing-mode='fixed' />
      <datasources>
        <datasource caption='Orders+ (Multiple Connections)' name='federated.1au5uqt010x7721fn5jsc1wf8pnt' />
      </datasources>
      <datasource-dependencies datasource='federated.1au5uqt010x7721fn5jsc1wf8pnt'>
        <column datatype='string' name='[Category]' role='dimension' type='nominal' />
        <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97334' id='5' param='horz' type='layout-flow' w='98000' x='1000' y='1333'>
            <zone h='97334' id='3' type='layout-basic' w='76750' x='1000' y='1333'>
              <zone h='48667' id='1' name='Global sales &amp; profit' w='76750' x='1000' y='1333'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48667' id='8' name='Sales by Sub category' w='38375' x='1000' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48667' id='9' name='Customer Breakdown' w='38375' x='39375' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='170' h='97334' id='4' is-fixed='true' param='vert' type='layout-flow' w='21250' x='77750' y='1333'>
              <zone fixed-size='134' h='23666' id='6' is-fixed='true' mode='radiolist' name='Global sales &amp; profit' param='[federated.1au5uqt010x7721fn5jsc1wf8pnt].[none:Category:nk]' type='filter' w='21250' x='77750' y='1333'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='12166' id='7' name='Global sales &amp; profit' pane-specification-id='0' param='[federated.1au5uqt010x7721fn5jsc1wf8pnt].[sum:Profit:qk]' type='color' w='21250' x='77750' y='24999'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='15500' id='10' name='Customer Breakdown' pane-specification-id='0' param='[federated.1au5uqt010x7721fn5jsc1wf8pnt].[none:Category:nk]' type='shape' w='21250' x='77750' y='37165'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows film-mode='true' saved-dpi-scale-factor='1.25' source-height='63'>
    <window class='worksheet' maximized='true' name='Sales seasonality'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card pane-specification-id='4' param='[federated.1au5uqt010x7721fn5jsc1wf8pnt].[yr:Order Date:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1au5uqt010x7721fn5jsc1wf8pnt].[Country (group)]</field>
            <field>[federated.1au5uqt010x7721fn5jsc1wf8pnt].[none:Category:nk]</field>
            <field>[federated.1au5uqt010x7721fn5jsc1wf8pnt].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Cross Tab'>
      <cards>
        <edge name='left'>
          <strip size='250'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card pane-specification-id='4' param='[federated.1au5uqt010x7721fn5jsc1wf8pnt].[sum:Profit:qk]' type='color' />
            <card param='[federated.1au5uqt010x7721fn5jsc1wf8pnt].[none:Category:nk]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1au5uqt010x7721fn5jsc1wf8pnt].[none:Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Global sales &amp; profit'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card mode='radiolist' param='[federated.1au5uqt010x7721fn5jsc1wf8pnt].[none:Category:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1au5uqt010x7721fn5jsc1wf8pnt].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1au5uqt010x7721fn5jsc1wf8pnt].[none:Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sales by Sub category'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card pane-specification-id='0' param='[federated.1au5uqt010x7721fn5jsc1wf8pnt].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.1au5uqt010x7721fn5jsc1wf8pnt].[none:Category:nk]</field>
                  <field>[federated.1au5uqt010x7721fn5jsc1wf8pnt].[Sub-Category (group)]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;Office Supplies&quot;</bucket>
                  <bucket>&quot;Art, Envelopes, Fasteners and 3 more&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1au5uqt010x7721fn5jsc1wf8pnt].[none:Category:nk]</field>
            <field>[federated.1au5uqt010x7721fn5jsc1wf8pnt].[none:Market:nk]</field>
            <field>[federated.1au5uqt010x7721fn5jsc1wf8pnt].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Customer Breakdown'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card pane-specification-id='0' param='[federated.1au5uqt010x7721fn5jsc1wf8pnt].[none:Category:nk]' type='shape' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1au5uqt010x7721fn5jsc1wf8pnt].[attr:Category:nk]</field>
            <field>[federated.1au5uqt010x7721fn5jsc1wf8pnt].[none:Category:nk]</field>
            <field>[federated.1au5uqt010x7721fn5jsc1wf8pnt].[none:Customer ID:nk]</field>
            <field>[federated.1au5uqt010x7721fn5jsc1wf8pnt].[none:Returned:nk]</field>
            <field>[federated.1au5uqt010x7721fn5jsc1wf8pnt].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Sales Dashboard'>
      <viewpoints>
        <viewpoint name='Customer Breakdown'>
          <zoom type='entire-view' />
          <highlight field='[federated.1au5uqt010x7721fn5jsc1wf8pnt].[none:Category:nk]' type='shape'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Global sales &amp; profit'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sales by Sub category'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='6' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Cross Tab' width='192'>
      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
      3Tb/D/TTne2JmLCmAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Customer Breakdown' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Global sales &amp; profit' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sales Dashboard' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sales by Sub category' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sales seasonality' width='192'>
      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
      RK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
